
code1:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x36b>
 248:	78 38                	js     282 <_init-0x35e>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 49 d3             	add    BYTE PTR [rcx-0x2d],cl
 286:	41 3a 3f             	cmp    dil,BYTE PTR [r15]
 289:	8b 58 37             	mov    ebx,DWORD PTR [rax+0x37]
 28c:	93                   	xchg   ebx,eax
 28d:	04 6e                	add    al,0x6e
 28f:	d9 89 5c 01 22 11    	(bad)  [rcx+0x1122015c]
 295:	a0                   	.byte 0xa0
 296:	6d                   	ins    DWORD PTR es:[rdi],dx
 297:	ea                   	(bad)  

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	03 00                	add    eax,DWORD PTR [rax]
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	07                   	(bad)  
 29d:	00 00                	add    BYTE PTR [rax],al
 29f:	00 01                	add    BYTE PTR [rcx],al
 2a1:	00 00                	add    BYTE PTR [rax],al
 2a3:	00 06                	add    BYTE PTR [rsi],al
 2a5:	00 00                	add    BYTE PTR [rax],al
 2a7:	00 88 c0 20 01 00    	add    BYTE PTR [rax+0x120c0],cl
 2ad:	04 40                	add    al,0x40
 2af:	09 07                	or     DWORD PTR [rdi],eax
 2b1:	00 00                	add    BYTE PTR [rax],al
 2b3:	00 09                	add    BYTE PTR [rcx],cl
 2b5:	00 00                	add    BYTE PTR [rax],al
 2b7:	00 0b                	add    BYTE PTR [rbx],cl
 2b9:	00 00                	add    BYTE PTR [rax],al
 2bb:	00 ba e3 92 7c 43    	add    BYTE PTR [rdx+0x437c92e3],bh
 2c1:	45 d5                	rex.RB (bad) 
 2c3:	ec                   	in     al,dx
 2c4:	d8 71 58             	fdiv   DWORD PTR [rcx+0x58]
 2c7:	1c b9                	sbb    al,0xb9
 2c9:	8d                   	(bad)  
 2ca:	f1                   	icebp  
 2cb:	0e                   	(bad)  
 2cc:	eb d3                	jmp    2a1 <_init-0x33f>
 2ce:	ef                   	out    dx,eax
 2cf:	0e                   	(bad)  

Disassembly of section .dynsym:

00000000000002d0 <.dynsym>:
	...
 2e8:	28 00                	sub    BYTE PTR [rax],al
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	20 00                	and    BYTE PTR [rax],al
	...
 2fe:	00 00                	add    BYTE PTR [rax],al
 300:	a9 00 00 00 12       	test   eax,0x12000000
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	37                   	(bad)  
 331:	00 00                	add    BYTE PTR [rax],al
 333:	00 20                	add    BYTE PTR [rax],ah
	...
 345:	00 00                	add    BYTE PTR [rax],al
 347:	00 9a 00 00 00 22    	add    BYTE PTR [rdx+0x22000000],bl
	...
 35d:	00 00                	add    BYTE PTR [rax],al
 35f:	00 51 00             	add    BYTE PTR [rcx+0x0],dl
 362:	00 00                	add    BYTE PTR [rax],al
 364:	12 00                	adc    al,BYTE PTR [rax]
	...
 376:	00 00                	add    BYTE PTR [rax],al
 378:	ce                   	(bad)  
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	00 10                	add    BYTE PTR [rax],dl
 37d:	00 18                	add    BYTE PTR [rax],bl
 37f:	00 18                	add    BYTE PTR [rax],bl
 381:	10 20                	adc    BYTE PTR [rax],ah
	...
 38f:	00 bb 00 00 00 10    	add    BYTE PTR [rbx+0x10000000],bh
 395:	00 17                	add    BYTE PTR [rdi],dl
 397:	00 10                	add    BYTE PTR [rax],dl
 399:	10 20                	adc    BYTE PTR [rax],ah
	...
 3a7:	00 c2                	add    dl,al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 10                	add    BYTE PTR [rax],dl
 3ad:	00 18                	add    BYTE PTR [rax],bl
 3af:	00 10                	add    BYTE PTR [rax],dl
 3b1:	10 20                	adc    BYTE PTR [rax],ah
	...
 3bf:	00 65 00             	add    BYTE PTR [rbp+0x0],ah
 3c2:	00 00                	add    BYTE PTR [rax],al
 3c4:	12 00                	adc    al,BYTE PTR [rax]
 3c6:	0b 00                	or     eax,DWORD PTR [rax]
 3c8:	e0 05                	loopne 3cf <_init-0x211>
	...
 3d6:	00 00                	add    BYTE PTR [rax],al
 3d8:	5f                   	pop    rdi
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 12                	add    BYTE PTR [rdx],dl
 3dd:	00 0f                	add    BYTE PTR [rdi],cl
 3df:	00 c4                	add    ah,al
 3e1:	07                   	(bad)  
	...

Disassembly of section .dynstr:

00000000000003f0 <.dynstr>:
 3f0:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 3f4:	6d                   	ins    DWORD PTR es:[rdi],dx
 3f5:	61                   	(bad)  
 3f6:	69 6e 2e 73 6f 00 5f 	imul   ebp,DWORD PTR [rsi+0x2e],0x5f006f73
 3fd:	49 54                	rex.WB push r12
 3ff:	4d 5f                	rex.WRB pop r15
 401:	64 65 72 65          	fs gs jb 46a <_init-0x176>
 405:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 40c:	4d 
 40d:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 40f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 410:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 411:	65 54                	gs push rsp
 413:	61                   	(bad)  
 414:	62                   	(bad)  
 415:	6c                   	ins    BYTE PTR es:[rdi],dx
 416:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 41a:	67 6d                	ins    DWORD PTR es:[edi],dx
 41c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 41d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 41e:	5f                   	pop    rdi
 41f:	73 74                	jae    495 <_init-0x14b>
 421:	61                   	(bad)  
 422:	72 74                	jb     498 <_init-0x148>
 424:	5f                   	pop    rdi
 425:	5f                   	pop    rdi
 426:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 429:	54                   	push   rsp
 42a:	4d 5f                	rex.WRB pop r15
 42c:	72 65                	jb     493 <_init-0x14d>
 42e:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 435:	4d 
 436:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 438:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 439:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 43a:	65 54                	gs push rsp
 43c:	61                   	(bad)  
 43d:	62                   	(bad)  
 43e:	6c                   	ins    BYTE PTR es:[rdi],dx
 43f:	65 00 73 6f          	add    BYTE PTR gs:[rbx+0x6f],dh
 443:	6d                   	ins    DWORD PTR es:[rdi],dx
 444:	65 5f                	gs pop rdi
 446:	66 75 6e             	data16 jne 4b7 <_init-0x129>
 449:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
 44d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 44e:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
 451:	69 6e 69 00 5f 69 6e 	imul   ebp,DWORD PTR [rsi+0x69],0x6e695f00
 458:	69 74 00 6c 69 62 70 	imul   esi,DWORD PTR [rax+rax*1+0x6c],0x74706269
 45f:	74 
 460:	68 72 65 61 64       	push   0x64616572
 465:	2e 73 6f             	cs jae 4d7 <_init-0x109>
 468:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 46b:	6c                   	ins    BYTE PTR es:[rdi],dx
 46c:	69 62 64 6c 2e 73 6f 	imul   esp,DWORD PTR [rdx+0x64],0x6f732e6c
 473:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
 476:	6c                   	ins    BYTE PTR es:[rdi],dx
 477:	69 62 6d 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x6d],0x2e6f732e
 47e:	36 00 6c 69 62       	add    BYTE PTR ss:[rcx+rbp*2+0x62],ch
 483:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 485:	73 6f                	jae    4f6 <_init-0xea>
 487:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 48c:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 48f:	5f                   	pop    rdi
 490:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 496:	7a 65                	jp     4fd <_init-0xe3>
 498:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 49b:	6c                   	ins    BYTE PTR es:[rdi],dx
 49c:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 4a3:	72 74                	jb     519 <_init-0xc7>
 4a5:	5f                   	pop    rdi
 4a6:	6d                   	ins    DWORD PTR es:[rdi],dx
 4a7:	61                   	(bad)  
 4a8:	69 6e 00 5f 65 64 61 	imul   ebp,DWORD PTR [rsi+0x0],0x6164655f
 4af:	74 61                	je     512 <_init-0xce>
 4b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 4b4:	62 73                	(bad)  
 4b6:	73 5f                	jae    517 <_init-0xc9>
 4b8:	73 74                	jae    52e <_init-0xb2>
 4ba:	61                   	(bad)  
 4bb:	72 74                	jb     531 <_init-0xaf>
 4bd:	00 5f 65             	add    BYTE PTR [rdi+0x65],bl
 4c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4c1:	64 00 47 4c          	add    BYTE PTR fs:[rdi+0x4c],al
 4c5:	49                   	rex.WB
 4c6:	42                   	rex.X
 4c7:	43 5f                	rex.XB pop r15
 4c9:	32 2e                	xor    ch,BYTE PTR [rsi]
 4cb:	32 2e                	xor    ch,BYTE PTR [rsi]
 4cd:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000004d0 <.gnu.version>:
 4d0:	00 00                	add    BYTE PTR [rax],al
 4d2:	00 00                	add    BYTE PTR [rax],al
 4d4:	02 00                	add    al,BYTE PTR [rax]
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	00 00                	add    BYTE PTR [rax],al
 4da:	02 00                	add    al,BYTE PTR [rax]
 4dc:	00 00                	add    BYTE PTR [rax],al
 4de:	01 00                	add    DWORD PTR [rax],eax
 4e0:	01 00                	add    DWORD PTR [rax],eax
 4e2:	01 00                	add    DWORD PTR [rax],eax
 4e4:	01 00                	add    DWORD PTR [rax],eax
 4e6:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

00000000000004e8 <.gnu.version_r>:
 4e8:	01 00                	add    DWORD PTR [rax],eax
 4ea:	01 00                	add    DWORD PTR [rax],eax
 4ec:	90                   	nop
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 10                	add    BYTE PTR [rax],dl
 4f1:	00 00                	add    BYTE PTR [rax],al
 4f3:	00 00                	add    BYTE PTR [rax],al
 4f5:	00 00                	add    BYTE PTR [rax],al
 4f7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 4fa:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 500:	d3 00                	rol    DWORD PTR [rax],cl
 502:	00 00                	add    BYTE PTR [rax],al
 504:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000508 <.rela.dyn>:
 508:	78 0d                	js     517 <_init-0xc9>
 50a:	20 00                	and    BYTE PTR [rax],al
 50c:	00 00                	add    BYTE PTR [rax],al
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	08 00                	or     BYTE PTR [rax],al
 512:	00 00                	add    BYTE PTR [rax],al
 514:	00 00                	add    BYTE PTR [rax],al
 516:	00 00                	add    BYTE PTR [rax],al
 518:	30 07                	xor    BYTE PTR [rdi],al
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	00 00                	add    BYTE PTR [rax],al
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	80 0d 20 00 00 00 00 	or     BYTE PTR [rip+0x20],0x0        # 547 <_init-0x99>
 527:	00 08                	add    BYTE PTR [rax],cl
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 00                	add    BYTE PTR [rax],al
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 f0                	add    al,dh
 531:	06                   	(bad)  
 532:	00 00                	add    BYTE PTR [rax],al
 534:	00 00                	add    BYTE PTR [rax],al
 536:	00 00                	add    BYTE PTR [rax],al
 538:	08 10                	or     BYTE PTR [rax],dl
 53a:	20 00                	and    BYTE PTR [rax],al
 53c:	00 00                	add    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	08 00                	or     BYTE PTR [rax],al
 542:	00 00                	add    BYTE PTR [rax],al
 544:	00 00                	add    BYTE PTR [rax],al
 546:	00 00                	add    BYTE PTR [rax],al
 548:	08 10                	or     BYTE PTR [rax],dl
 54a:	20 00                	and    BYTE PTR [rax],al
 54c:	00 00                	add    BYTE PTR [rax],al
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	d8 0f                	fmul   DWORD PTR [rdi]
 552:	20 00                	and    BYTE PTR [rax],al
 554:	00 00                	add    BYTE PTR [rax],al
 556:	00 00                	add    BYTE PTR [rax],al
 558:	06                   	(bad)  
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 01                	add    BYTE PTR [rcx],al
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 e0                	add    al,ah
 569:	0f 20 00             	mov    rax,cr0
 56c:	00 00                	add    BYTE PTR [rax],al
 56e:	00 00                	add    BYTE PTR [rax],al
 570:	06                   	(bad)  
 571:	00 00                	add    BYTE PTR [rax],al
 573:	00 02                	add    BYTE PTR [rdx],al
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 e8                	add    al,ch
 581:	0f 20 00             	mov    rax,cr0
 584:	00 00                	add    BYTE PTR [rax],al
 586:	00 00                	add    BYTE PTR [rax],al
 588:	06                   	(bad)  
 589:	00 00                	add    BYTE PTR [rax],al
 58b:	00 03                	add    BYTE PTR [rbx],al
	...
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 f0                	add    al,dh
 599:	0f 20 00             	mov    rax,cr0
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	06                   	(bad)  
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	f8                   	clc    
 5b1:	0f 20 00             	mov    rax,cr0
 5b4:	00 00                	add    BYTE PTR [rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	06                   	(bad)  
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5c1 <_init-0x1f>
 5c1:	00 00                	add    BYTE PTR [rax],al
 5c3:	00 00                	add    BYTE PTR [rax],al
 5c5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.plt:

00000000000005c8 <.rela.plt>:
 5c8:	d0 0f                	ror    BYTE PTR [rdi],1
 5ca:	20 00                	and    BYTE PTR [rax],al
 5cc:	00 00                	add    BYTE PTR [rax],al
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	07                   	(bad)  
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .init:

00000000000005e0 <_init>:
 5e0:	48 83 ec 08          	sub    rsp,0x8
 5e4:	48 8b 05 ed 09 20 00 	mov    rax,QWORD PTR [rip+0x2009ed]        # 200fd8 <__gmon_start__>
 5eb:	48 85 c0             	test   rax,rax
 5ee:	74 02                	je     5f2 <_init+0x12>
 5f0:	ff d0                	call   rax
 5f2:	48 83 c4 08          	add    rsp,0x8
 5f6:	c3                   	ret    

Disassembly of section .plt:

0000000000000600 <.plt>:
 600:	ff 35 ba 09 20 00    	push   QWORD PTR [rip+0x2009ba]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
 606:	ff 25 bc 09 20 00    	jmp    QWORD PTR [rip+0x2009bc]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
 60c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000610 <some_function@plt>:
 610:	ff 25 ba 09 20 00    	jmp    QWORD PTR [rip+0x2009ba]        # 200fd0 <some_function>
 616:	68 00 00 00 00       	push   0x0
 61b:	e9 e0 ff ff ff       	jmp    600 <.plt>

Disassembly of section .plt.got:

0000000000000620 <__cxa_finalize@plt>:
 620:	ff 25 d2 09 20 00    	jmp    QWORD PTR [rip+0x2009d2]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 626:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000630 <_start>:
 630:	31 ed                	xor    ebp,ebp
 632:	49 89 d1             	mov    r9,rdx
 635:	5e                   	pop    rsi
 636:	48 89 e2             	mov    rdx,rsp
 639:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 63d:	50                   	push   rax
 63e:	54                   	push   rsp
 63f:	4c 8d 05 7a 01 00 00 	lea    r8,[rip+0x17a]        # 7c0 <__libc_csu_fini>
 646:	48 8d 0d 03 01 00 00 	lea    rcx,[rip+0x103]        # 750 <__libc_csu_init>
 64d:	48 8d 3d e6 00 00 00 	lea    rdi,[rip+0xe6]        # 73a <main>
 654:	ff 15 86 09 20 00    	call   QWORD PTR [rip+0x200986]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 65a:	f4                   	hlt    
 65b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000660 <deregister_tm_clones>:
 660:	48 8d 3d a9 09 20 00 	lea    rdi,[rip+0x2009a9]        # 201010 <__TMC_END__>
 667:	55                   	push   rbp
 668:	48 8d 05 a1 09 20 00 	lea    rax,[rip+0x2009a1]        # 201010 <__TMC_END__>
 66f:	48 39 f8             	cmp    rax,rdi
 672:	48 89 e5             	mov    rbp,rsp
 675:	74 19                	je     690 <deregister_tm_clones+0x30>
 677:	48 8b 05 6a 09 20 00 	mov    rax,QWORD PTR [rip+0x20096a]        # 200fe8 <_ITM_deregisterTMCloneTable>
 67e:	48 85 c0             	test   rax,rax
 681:	74 0d                	je     690 <deregister_tm_clones+0x30>
 683:	5d                   	pop    rbp
 684:	ff e0                	jmp    rax
 686:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 68d:	00 00 00 
 690:	5d                   	pop    rbp
 691:	c3                   	ret    
 692:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 69d:	00 00 00 

00000000000006a0 <register_tm_clones>:
 6a0:	48 8d 3d 69 09 20 00 	lea    rdi,[rip+0x200969]        # 201010 <__TMC_END__>
 6a7:	48 8d 35 62 09 20 00 	lea    rsi,[rip+0x200962]        # 201010 <__TMC_END__>
 6ae:	55                   	push   rbp
 6af:	48 29 fe             	sub    rsi,rdi
 6b2:	48 89 e5             	mov    rbp,rsp
 6b5:	48 c1 fe 03          	sar    rsi,0x3
 6b9:	48 89 f0             	mov    rax,rsi
 6bc:	48 c1 e8 3f          	shr    rax,0x3f
 6c0:	48 01 c6             	add    rsi,rax
 6c3:	48 d1 fe             	sar    rsi,1
 6c6:	74 18                	je     6e0 <register_tm_clones+0x40>
 6c8:	48 8b 05 21 09 20 00 	mov    rax,QWORD PTR [rip+0x200921]        # 200ff0 <_ITM_registerTMCloneTable>
 6cf:	48 85 c0             	test   rax,rax
 6d2:	74 0c                	je     6e0 <register_tm_clones+0x40>
 6d4:	5d                   	pop    rbp
 6d5:	ff e0                	jmp    rax
 6d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 6de:	00 00 
 6e0:	5d                   	pop    rbp
 6e1:	c3                   	ret    
 6e2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 6e6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6ed:	00 00 00 

00000000000006f0 <__do_global_dtors_aux>:
 6f0:	80 3d 19 09 20 00 00 	cmp    BYTE PTR [rip+0x200919],0x0        # 201010 <__TMC_END__>
 6f7:	75 2f                	jne    728 <__do_global_dtors_aux+0x38>
 6f9:	48 83 3d f7 08 20 00 	cmp    QWORD PTR [rip+0x2008f7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 700:	00 
 701:	55                   	push   rbp
 702:	48 89 e5             	mov    rbp,rsp
 705:	74 0c                	je     713 <__do_global_dtors_aux+0x23>
 707:	48 8b 3d fa 08 20 00 	mov    rdi,QWORD PTR [rip+0x2008fa]        # 201008 <__dso_handle>
 70e:	e8 0d ff ff ff       	call   620 <__cxa_finalize@plt>
 713:	e8 48 ff ff ff       	call   660 <deregister_tm_clones>
 718:	c6 05 f1 08 20 00 01 	mov    BYTE PTR [rip+0x2008f1],0x1        # 201010 <__TMC_END__>
 71f:	5d                   	pop    rbp
 720:	c3                   	ret    
 721:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 728:	f3 c3                	repz ret 
 72a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000730 <frame_dummy>:
 730:	55                   	push   rbp
 731:	48 89 e5             	mov    rbp,rsp
 734:	5d                   	pop    rbp
 735:	e9 66 ff ff ff       	jmp    6a0 <register_tm_clones>

000000000000073a <main>:
 73a:	55                   	push   rbp
 73b:	48 89 e5             	mov    rbp,rsp
 73e:	b8 00 00 00 00       	mov    eax,0x0
 743:	e8 c8 fe ff ff       	call   610 <some_function@plt>
 748:	b8 00 00 00 00       	mov    eax,0x0
 74d:	5d                   	pop    rbp
 74e:	c3                   	ret    
 74f:	90                   	nop

0000000000000750 <__libc_csu_init>:
 750:	41 57                	push   r15
 752:	41 56                	push   r14
 754:	49 89 d7             	mov    r15,rdx
 757:	41 55                	push   r13
 759:	41 54                	push   r12
 75b:	4c 8d 25 16 06 20 00 	lea    r12,[rip+0x200616]        # 200d78 <__frame_dummy_init_array_entry>
 762:	55                   	push   rbp
 763:	48 8d 2d 16 06 20 00 	lea    rbp,[rip+0x200616]        # 200d80 <__init_array_end>
 76a:	53                   	push   rbx
 76b:	41 89 fd             	mov    r13d,edi
 76e:	49 89 f6             	mov    r14,rsi
 771:	4c 29 e5             	sub    rbp,r12
 774:	48 83 ec 08          	sub    rsp,0x8
 778:	48 c1 fd 03          	sar    rbp,0x3
 77c:	e8 5f fe ff ff       	call   5e0 <_init>
 781:	48 85 ed             	test   rbp,rbp
 784:	74 20                	je     7a6 <__libc_csu_init+0x56>
 786:	31 db                	xor    ebx,ebx
 788:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 78f:	00 
 790:	4c 89 fa             	mov    rdx,r15
 793:	4c 89 f6             	mov    rsi,r14
 796:	44 89 ef             	mov    edi,r13d
 799:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 79d:	48 83 c3 01          	add    rbx,0x1
 7a1:	48 39 dd             	cmp    rbp,rbx
 7a4:	75 ea                	jne    790 <__libc_csu_init+0x40>
 7a6:	48 83 c4 08          	add    rsp,0x8
 7aa:	5b                   	pop    rbx
 7ab:	5d                   	pop    rbp
 7ac:	41 5c                	pop    r12
 7ae:	41 5d                	pop    r13
 7b0:	41 5e                	pop    r14
 7b2:	41 5f                	pop    r15
 7b4:	c3                   	ret    
 7b5:	90                   	nop
 7b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 7bd:	00 00 00 

00000000000007c0 <__libc_csu_fini>:
 7c0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000007c4 <_fini>:
 7c4:	48 83 ec 08          	sub    rsp,0x8
 7c8:	48 83 c4 08          	add    rsp,0x8
 7cc:	c3                   	ret    

Disassembly of section .rodata:

00000000000007d0 <_IO_stdin_used>:
 7d0:	01 00                	add    DWORD PTR [rax],eax
 7d2:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

00000000000007d4 <__GNU_EH_FRAME_HDR>:
 7d4:	01 1b                	add    DWORD PTR [rbx],ebx
 7d6:	03 3b                	add    edi,DWORD PTR [rbx]
 7d8:	38 00                	cmp    BYTE PTR [rax],al
 7da:	00 00                	add    BYTE PTR [rax],al
 7dc:	06                   	(bad)  
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 2c fe             	add    BYTE PTR [rsi+rdi*8],ch
 7e2:	ff                   	(bad)  
 7e3:	ff 84 00 00 00 4c fe 	inc    DWORD PTR [rax+rax*1-0x1b40000]
 7ea:	ff                   	(bad)  
 7eb:	ff ac 00 00 00 5c fe 	jmp    FWORD PTR [rax+rax*1-0x1a40000]
 7f2:	ff                   	(bad)  
 7f3:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
 7f7:	00 66 ff             	add    BYTE PTR [rsi-0x1],ah
 7fa:	ff                   	(bad)  
 7fb:	ff c4                	inc    esp
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 7c ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],bh
 803:	ff e4                	jmp    rsp
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 ec                	add    ah,ch
 809:	ff                   	(bad)  
 80a:	ff                   	(bad)  
 80b:	ff 2c 01             	jmp    FWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000000810 <__FRAME_END__-0x104>:
 810:	14 00                	adc    al,0x0
 812:	00 00                	add    BYTE PTR [rax],al
 814:	00 00                	add    BYTE PTR [rax],al
 816:	00 00                	add    BYTE PTR [rax],al
 818:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 81b:	00 01                	add    BYTE PTR [rcx],al
 81d:	78 10                	js     82f <__GNU_EH_FRAME_HDR+0x5b>
 81f:	01 1b                	add    DWORD PTR [rbx],ebx
 821:	0c 07                	or     al,0x7
 823:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 829:	00 00                	add    BYTE PTR [rax],al
 82b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 82e:	00 00                	add    BYTE PTR [rax],al
 830:	00 fe                	add    dh,bh
 832:	ff                   	(bad)  
 833:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 83d:	00 00                	add    BYTE PTR [rax],al
 83f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 842:	00 00                	add    BYTE PTR [rax],al
 844:	00 00                	add    BYTE PTR [rax],al
 846:	00 00                	add    BYTE PTR [rax],al
 848:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 84b:	00 01                	add    BYTE PTR [rcx],al
 84d:	78 10                	js     85f <__GNU_EH_FRAME_HDR+0x8b>
 84f:	01 1b                	add    DWORD PTR [rbx],ebx
 851:	0c 07                	or     al,0x7
 853:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 859:	00 00                	add    BYTE PTR [rax],al
 85b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 85e:	00 00                	add    BYTE PTR [rax],al
 860:	a0 fd ff ff 20 00 00 	movabs al,ds:0x20fffffd
 867:	00 00 
 869:	0e                   	(bad)  
 86a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 86d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 870:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 873:	80 00 3f             	add    BYTE PTR [rax],0x3f
 876:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 878:	2a 33                	sub    dh,BYTE PTR [rbx]
 87a:	24 22                	and    al,0x22
 87c:	00 00                	add    BYTE PTR [rax],al
 87e:	00 00                	add    BYTE PTR [rax],al
 880:	14 00                	adc    al,0x0
 882:	00 00                	add    BYTE PTR [rax],al
 884:	44 00 00             	add    BYTE PTR [rax],r8b
 887:	00 98 fd ff ff 08    	add    BYTE PTR [rax+0x8fffffd],bl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 89a:	00 00                	add    BYTE PTR [rax],al
 89c:	5c                   	pop    rsp
 89d:	00 00                	add    BYTE PTR [rax],al
 89f:	00 9a fe ff ff 15    	add    BYTE PTR [rdx+0x15fffffe],bl
 8a5:	00 00                	add    BYTE PTR [rax],al
 8a7:	00 00                	add    BYTE PTR [rax],al
 8a9:	41 0e                	rex.B (bad) 
 8ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 8b1:	50                   	push   rax
 8b2:	0c 07                	or     al,0x7
 8b4:	08 00                	or     BYTE PTR [rax],al
 8b6:	00 00                	add    BYTE PTR [rax],al
 8b8:	44 00 00             	add    BYTE PTR [rax],r8b
 8bb:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
 8bf:	00 90 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],dl
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 00                	add    BYTE PTR [rax],al
 8c9:	42 0e                	rex.X (bad) 
 8cb:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 8d1:	8e 03                	mov    es,WORD PTR [rbx]
 8d3:	45 0e                	rex.RB (bad) 
 8d5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 8db:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301729 <_end+0xffffffff86100711>
 8e1:	06                   	(bad)  
 8e2:	48 0e                	rex.W (bad) 
 8e4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 8ea:	72 0e                	jb     8fa <__GNU_EH_FRAME_HDR+0x126>
 8ec:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 8ef:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 8f2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 8f5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 8f8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 8fb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 8fe:	08 00                	or     BYTE PTR [rax],al
 900:	10 00                	adc    BYTE PTR [rax],al
 902:	00 00                	add    BYTE PTR [rax],al
 904:	c4                   	(bad)  
 905:	00 00                	add    BYTE PTR [rax],al
 907:	00 b8 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],bh
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 00                	add    BYTE PTR [rax],al
 911:	00 00                	add    BYTE PTR [rax],al
	...

0000000000000914 <__FRAME_END__>:
 914:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200d78 <__frame_dummy_init_array_entry>:
  200d78:	30 07                	xor    BYTE PTR [rdi],al
  200d7a:	00 00                	add    BYTE PTR [rax],al
  200d7c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200d80 <__do_global_dtors_aux_fini_array_entry>:
  200d80:	f0 06                	lock (bad) 
  200d82:	00 00                	add    BYTE PTR [rax],al
  200d84:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200d88 <_DYNAMIC>:
  200d88:	01 00                	add    DWORD PTR [rax],eax
  200d8a:	00 00                	add    BYTE PTR [rax],al
  200d8c:	00 00                	add    BYTE PTR [rax],al
  200d8e:	00 00                	add    BYTE PTR [rax],al
  200d90:	01 00                	add    DWORD PTR [rax],eax
  200d92:	00 00                	add    BYTE PTR [rax],al
  200d94:	00 00                	add    BYTE PTR [rax],al
  200d96:	00 00                	add    BYTE PTR [rax],al
  200d98:	01 00                	add    DWORD PTR [rax],eax
  200d9a:	00 00                	add    BYTE PTR [rax],al
  200d9c:	00 00                	add    BYTE PTR [rax],al
  200d9e:	00 00                	add    BYTE PTR [rax],al
  200da0:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
  200da3:	00 00                	add    BYTE PTR [rax],al
  200da5:	00 00                	add    BYTE PTR [rax],al
  200da7:	00 01                	add    BYTE PTR [rcx],al
  200da9:	00 00                	add    BYTE PTR [rax],al
  200dab:	00 00                	add    BYTE PTR [rax],al
  200dad:	00 00                	add    BYTE PTR [rax],al
  200daf:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
  200db2:	00 00                	add    BYTE PTR [rax],al
  200db4:	00 00                	add    BYTE PTR [rax],al
  200db6:	00 00                	add    BYTE PTR [rax],al
  200db8:	01 00                	add    DWORD PTR [rax],eax
  200dba:	00 00                	add    BYTE PTR [rax],al
  200dbc:	00 00                	add    BYTE PTR [rax],al
  200dbe:	00 00                	add    BYTE PTR [rax],al
  200dc0:	86 00                	xchg   BYTE PTR [rax],al
  200dc2:	00 00                	add    BYTE PTR [rax],al
  200dc4:	00 00                	add    BYTE PTR [rax],al
  200dc6:	00 00                	add    BYTE PTR [rax],al
  200dc8:	01 00                	add    DWORD PTR [rax],eax
  200dca:	00 00                	add    BYTE PTR [rax],al
  200dcc:	00 00                	add    BYTE PTR [rax],al
  200dce:	00 00                	add    BYTE PTR [rax],al
  200dd0:	90                   	nop
  200dd1:	00 00                	add    BYTE PTR [rax],al
  200dd3:	00 00                	add    BYTE PTR [rax],al
  200dd5:	00 00                	add    BYTE PTR [rax],al
  200dd7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  200dda:	00 00                	add    BYTE PTR [rax],al
  200ddc:	00 00                	add    BYTE PTR [rax],al
  200dde:	00 00                	add    BYTE PTR [rax],al
  200de0:	e0 05                	loopne 200de7 <_DYNAMIC+0x5f>
  200de2:	00 00                	add    BYTE PTR [rax],al
  200de4:	00 00                	add    BYTE PTR [rax],al
  200de6:	00 00                	add    BYTE PTR [rax],al
  200de8:	0d 00 00 00 00       	or     eax,0x0
  200ded:	00 00                	add    BYTE PTR [rax],al
  200def:	00 c4                	add    ah,al
  200df1:	07                   	(bad)  
  200df2:	00 00                	add    BYTE PTR [rax],al
  200df4:	00 00                	add    BYTE PTR [rax],al
  200df6:	00 00                	add    BYTE PTR [rax],al
  200df8:	19 00                	sbb    DWORD PTR [rax],eax
  200dfa:	00 00                	add    BYTE PTR [rax],al
  200dfc:	00 00                	add    BYTE PTR [rax],al
  200dfe:	00 00                	add    BYTE PTR [rax],al
  200e00:	78 0d                	js     200e0f <_DYNAMIC+0x87>
  200e02:	20 00                	and    BYTE PTR [rax],al
  200e04:	00 00                	add    BYTE PTR [rax],al
  200e06:	00 00                	add    BYTE PTR [rax],al
  200e08:	1b 00                	sbb    eax,DWORD PTR [rax]
  200e0a:	00 00                	add    BYTE PTR [rax],al
  200e0c:	00 00                	add    BYTE PTR [rax],al
  200e0e:	00 00                	add    BYTE PTR [rax],al
  200e10:	08 00                	or     BYTE PTR [rax],al
  200e12:	00 00                	add    BYTE PTR [rax],al
  200e14:	00 00                	add    BYTE PTR [rax],al
  200e16:	00 00                	add    BYTE PTR [rax],al
  200e18:	1a 00                	sbb    al,BYTE PTR [rax]
  200e1a:	00 00                	add    BYTE PTR [rax],al
  200e1c:	00 00                	add    BYTE PTR [rax],al
  200e1e:	00 00                	add    BYTE PTR [rax],al
  200e20:	80 0d 20 00 00 00 00 	or     BYTE PTR [rip+0x20],0x0        # 200e47 <_DYNAMIC+0xbf>
  200e27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  200e2a:	00 00                	add    BYTE PTR [rax],al
  200e2c:	00 00                	add    BYTE PTR [rax],al
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	08 00                	or     BYTE PTR [rax],al
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f5                   	cmc    
  200e39:	fe                   	(bad)  
  200e3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e3d:	00 00                	add    BYTE PTR [rax],al
  200e3f:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e45:	00 00                	add    BYTE PTR [rax],al
  200e47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e4d <_DYNAMIC+0xc5>
  200e4d:	00 00                	add    BYTE PTR [rax],al
  200e4f:	00 f0                	add    al,dh
  200e51:	03 00                	add    eax,DWORD PTR [rax]
  200e53:	00 00                	add    BYTE PTR [rax],al
  200e55:	00 00                	add    BYTE PTR [rax],al
  200e57:	00 06                	add    BYTE PTR [rsi],al
  200e59:	00 00                	add    BYTE PTR [rax],al
  200e5b:	00 00                	add    BYTE PTR [rax],al
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 d0                	add    al,dl
  200e61:	02 00                	add    al,BYTE PTR [rax]
  200e63:	00 00                	add    BYTE PTR [rax],al
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 0a                	add    BYTE PTR [rdx],cl
  200e69:	00 00                	add    BYTE PTR [rax],al
  200e6b:	00 00                	add    BYTE PTR [rax],al
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 df                	add    bh,bl
  200e71:	00 00                	add    BYTE PTR [rax],al
  200e73:	00 00                	add    BYTE PTR [rax],al
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 0b                	add    BYTE PTR [rbx],cl
  200e79:	00 00                	add    BYTE PTR [rax],al
  200e7b:	00 00                	add    BYTE PTR [rax],al
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 18                	add    BYTE PTR [rax],bl
  200e81:	00 00                	add    BYTE PTR [rax],al
  200e83:	00 00                	add    BYTE PTR [rax],al
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 200e8d <_DYNAMIC+0x105>
	...
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 03                	add    BYTE PTR [rbx],al
  200e99:	00 00                	add    BYTE PTR [rax],al
  200e9b:	00 00                	add    BYTE PTR [rax],al
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 b8 0f 20 00 00    	add    BYTE PTR [rax+0x200f],bh
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 02                	add    BYTE PTR [rdx],al
  200ea9:	00 00                	add    BYTE PTR [rax],al
  200eab:	00 00                	add    BYTE PTR [rax],al
  200ead:	00 00                	add    BYTE PTR [rax],al
  200eaf:	00 18                	add    BYTE PTR [rax],bl
  200eb1:	00 00                	add    BYTE PTR [rax],al
  200eb3:	00 00                	add    BYTE PTR [rax],al
  200eb5:	00 00                	add    BYTE PTR [rax],al
  200eb7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	07                   	(bad)  
  200ec1:	00 00                	add    BYTE PTR [rax],al
  200ec3:	00 00                	add    BYTE PTR [rax],al
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 17                	add    BYTE PTR [rdi],dl
  200ec9:	00 00                	add    BYTE PTR [rax],al
  200ecb:	00 00                	add    BYTE PTR [rax],al
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 c8                	add    al,cl
  200ed1:	05 00 00 00 00       	add    eax,0x0
  200ed6:	00 00                	add    BYTE PTR [rax],al
  200ed8:	07                   	(bad)  
  200ed9:	00 00                	add    BYTE PTR [rax],al
  200edb:	00 00                	add    BYTE PTR [rax],al
  200edd:	00 00                	add    BYTE PTR [rax],al
  200edf:	00 08                	add    BYTE PTR [rax],cl
  200ee1:	05 00 00 00 00       	add    eax,0x0
  200ee6:	00 00                	add    BYTE PTR [rax],al
  200ee8:	08 00                	or     BYTE PTR [rax],al
  200eea:	00 00                	add    BYTE PTR [rax],al
  200eec:	00 00                	add    BYTE PTR [rax],al
  200eee:	00 00                	add    BYTE PTR [rax],al
  200ef0:	c0 00 00             	rol    BYTE PTR [rax],0x0
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 09                	add    BYTE PTR [rcx],cl
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 18                	add    BYTE PTR [rax],bl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 1e                	add    BYTE PTR [rsi],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 08                	add    BYTE PTR [rax],cl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 fb                	add    bl,bh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 01                	add    BYTE PTR [rcx],al
  200f21:	00 00                	add    BYTE PTR [rax],al
  200f23:	08 00                	or     BYTE PTR [rax],al
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 fe                	add    dh,bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 e8                	add    al,ch
  200f31:	04 00                	add    al,0x0
  200f33:	00 00                	add    BYTE PTR [rax],al
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 ff                	add    bh,bh
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 01                	add    BYTE PTR [rcx],al
  200f41:	00 00                	add    BYTE PTR [rax],al
  200f43:	00 00                	add    BYTE PTR [rax],al
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 f0                	add    al,dh
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 d0                	add    al,dl
  200f51:	04 00                	add    al,0x0
  200f53:	00 00                	add    BYTE PTR [rax],al
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 f9                	add    cl,bh
  200f59:	ff                   	(bad)  
  200f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fb8 <_GLOBAL_OFFSET_TABLE_>:
  200fb8:	88 0d 20 00 00 00    	mov    BYTE PTR [rip+0x20],cl        # 200fde <_GLOBAL_OFFSET_TABLE_+0x26>
	...
  200fce:	00 00                	add    BYTE PTR [rax],al
  200fd0:	16                   	(bad)  
  200fd1:	06                   	(bad)  
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x568>
   a:	74 75                	je     81 <_init-0x55f>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 35 2e 30 2d 33    	cs xor eax,0x332d302e
  14:	75 62                	jne    78 <_init-0x568>
  16:	75 6e                	jne    86 <_init-0x55a>
  18:	74 75                	je     8f <_init-0x551>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	38 2e                	cmp    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 37                	and    BYTE PTR [rdi],dh
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    BYTE PTR cs:[rax],al
